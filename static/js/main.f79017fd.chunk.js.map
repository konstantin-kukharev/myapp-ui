{"version":3,"sources":["App.tsx","module/request/api.tsx","module/auth/session.tsx","form/auth.tsx","Login.tsx","Error.tsx","module/RoutePrivate.tsx","redux/reducers/auth.js","redux/reducers/index.js","redux/storeConfig.tsx","index.tsx"],"names":["App","_","api","conf","publicKey","currentDomain","basePath","this","domain","link","data","axios","get","params","withCredentials","then","resp","error","catch","err","console","post","session","settings","tokenKey","cookieKey","tokenString","authorized","getTokenString","isTokenValid","removeToken","localToken","localStorage","getItem","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","jwt","verify","algorithms","e","removeItem","AuthForm","p","className","onSubmit","event","preventDefault","target","login","value","password","type","name","placeholder","Login","s","a","React","useState","isAuthorized","Error","href","PrivateRoute","children","rest","render","to","initialState","payload","state","action","createRootReducer","history","combineReducers","router","connectRouter","auth","createBrowserHistory","preloadedState","store","createStore","compose","applyMiddleware","routerMiddleware","process","ReactDOM","exact","path","StrictMode","RoutePrivate","component","getElementById"],"mappings":"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","file":"static/js/main.f79017fd.chunk.js","sourcesContent":["import React from 'react';\nimport backendSettings from \"./module/settings/backend\";\n\nconst App = (_ :backendSettings) => {\n\n    return <h1>authorized</h1>\n}\n\nexport default App","import axios from \"axios\";\nimport backendSettings from \"../settings/backend\";\n\nclass api {\n    private readonly publicKey :string\n    private readonly currentDomain :string\n    private readonly basePath :string\n\n    constructor(conf :backendSettings) {\n        this.publicKey = conf.publicKey\n        this.currentDomain = conf.api.domain\n        this.basePath = conf.api.basePath\n    }\n\n    public get (link: string, data: Object) {\n        return axios.get(\n            `${this.basePath}${link}`,\n            {\n                params: data,\n                //headers: this.getRequestHeader(),\n                withCredentials: true\n            }\n        ).then((resp) => {\n            return {\n                error: 0,\n                data: resp.data\n            }\n        }).catch((err) => {\n            console.error(err)\n\n            return {\n                error: 1,\n                data: null\n            }\n        })\n    }\n\n    public post (link: string, data: Object) {\n        return axios.post(\n            `${this.basePath}${link}`,\n            data,\n            {\n                //headers: this.getRequestHeader(),\n                withCredentials: true\n            }\n        ).then((resp) => {\n            return {\n                error: 0,\n                data: resp.data\n            }\n        }).catch((err) => {\n            console.error(err)\n\n            return {\n                error: 1,\n                data: null\n            }\n        })\n    }\n}\n\nexport default api","// @ts-ignore\nimport jwt from 'jsonwebtoken';\nimport backendSettings from \"../settings/backend\";\n\nclass session {\n    private readonly tokenKey: string\n    private readonly cookieKey: string\n    private readonly tokenString: string | undefined\n    private readonly authorized: boolean = false\n\n    constructor(settings :backendSettings) {\n        this.tokenKey = settings.tokenKey\n        this.cookieKey = settings.cookieKey\n        this.tokenString = this.getTokenString()\n        if (this.tokenString && (this.isTokenValid(settings.publicKey))) {\n             this.authorized = true\n        } else {\n            this.removeToken()\n        }\n    }\n\n    private getTokenString(): string | undefined {\n        if(!this.tokenKey || !this.cookieKey) return undefined\n\n        if (this.tokenString) return this.tokenString\n\n        let localToken: string | null | undefined = localStorage.getItem(this.tokenKey)\n        if (localToken) return localToken\n\n        let matches = document.cookie.match(new RegExp(\n            // eslint-disable-next-line\n            \"(?:^|; )\" + this.cookieKey.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n        ));\n\n        localToken = matches ? decodeURIComponent(matches[1]) : undefined;\n\n        if (localToken) return localToken\n\n        return undefined\n    }\n\n    private isTokenValid(publicKey :string): boolean {\n        if (!this.tokenString) return false\n\n        try {\n            jwt.verify(this.tokenString, publicKey, {algorithms: ['RS256']})\n            return true\n        } catch (e) {\n            return false\n        }\n    }\n\n    private removeToken(): void {\n        localStorage.removeItem(this.tokenKey);\n    }\n\n    public isAuthorized() :boolean {\n        return this.authorized\n    }\n}\n\n// private getRequestHeader () {\n//     let token = this.getToken()\n//     token = (token === undefined) ? null : token;\n//     if (token === null) {\n//         return {}\n//     }\n//\n//     return {\n//         'Authorization': `Bearer ${token}`\n//     }\n// }\n\nexport default session","import React from 'react';\nimport api from '../module/request/api';\nimport '../css/login.scss';\n\ntype params = {\n    api :api\n}\n\nfunction AuthForm (p :params) {\n    const signIn = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        const target = event.target as typeof event.target & {\n            login: { value: string };\n            password: { value: string };\n        };\n        const login = target.login.value;\n        const password = target.password.value;\n        p?.api?.post( '/auth', {login, password})\n    }\n\n    return (\n        <form className=\"login\" onSubmit={signIn}>\n            <input type=\"text\" name=\"login\" placeholder=\"Login\"/>\n            <input type=\"password\" name=\"password\" placeholder=\"Password\"/>\n            <button type=\"submit\">Sign in</button>\n        </form>\n    )\n}\n\nexport default AuthForm","import React from 'react';\nimport api from './module/request/api';\nimport session from './module/auth/session';\nimport backendSettings from \"./module/settings/backend\";\nimport AuthForm from \"./form/auth\";\n\nconst Login = (settings :backendSettings) => {\n    const s :session = new session(settings)\n    const a :api = new api(settings)\n    const [authorized] = React.useState(s.isAuthorized());\n\n    if (!authorized) {\n        return (\n            <AuthForm api={a}/>\n        )\n    }\n\n    return <h1>authorized</h1>\n}\n\nexport default Login","import React from 'react';\nimport './css/error.scss';\n\n\nfunction Error () {\n    return (\n        <div>\n            <h1>404 Not Found</h1>\n            <a href={\"/\"}>go back to main page</a>\n        </div>\n    )\n}\n\nexport default Error","import * as React from \"react\"\nimport { Route, Redirect } from 'react-router'\n\nfunction PrivateRoute({ children, ...rest } :{children: JSX.Element; [rest: string]: any;}): JSX.Element {\n    return (\n        <Route {...rest} render={() => {\n            return <Redirect to='/login' />\n        }} />\n    )\n}\n\nexport default PrivateRoute","// import { AUTHORIZE, LOGOUT, CHANGE_AUTH_FORM } from \"../actionTypes\";\n// import ServerRequest from \"../../components/ServerRequest\";\n// const jwt = require('jsonwebtoken');\n// const publicKey = `${process.env.REACT_APP_PUBLIC_KEY}`\n//\n// const logout = () => {\n//     const req = ServerRequest.post(\n//       `/auth/logout`,\n//       {}\n//       )\n//\n//     ServerRequest.removeToken()\n//\n//     return req\n// }\n//\n// let token = ServerRequest.getToken()\n// token = (token === undefined) ? null : token;\n// let authorized = false\n// let payload = {}\n//\n// if(token !== undefined && token !== null) {\n//     try {\n//         const {role} = jwt.verify(token, publicKey, { algorithms: ['RS256'] })\n//         authorized = true\n//         payload = {role}\n//     } catch (e) {\n//         console.error(`failed to authorize`,e)\n//         payload = {}\n//         authorized = false\n//     }\n// }\n//\n\nlet payload = {}\nlet authorized = false\n\nlet initialState = {\n    authorized,\n    payload\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case 'AUTHORIZE': {\n            return {\n                ...state,\n                authorized\n            };\n        }\n        case 'LOGOUT': {\n            return {\n                ...state,\n                authorized,\n            };\n        }\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from 'connected-react-router'\nimport auth from \"./auth\";\n\nconst createRootReducer = (history) => combineReducers({\n    router: connectRouter(history),\n    auth\n})\n\nexport default createRootReducer","import {createBrowserHistory} from 'history'\nimport {applyMiddleware, compose, createStore} from 'redux'\nimport {routerMiddleware} from 'connected-react-router'\nimport createRootReducer from './reducers'\n\nexport const history = createBrowserHistory()\n\nexport default function configureStore(preloadedState :Object) {\n    return createStore(\n        createRootReducer(history), // root reducer with router state\n        preloadedState,\n        compose(\n            applyMiddleware(\n                routerMiddleware(history), // for dispatching history actions\n                // ... other middlewares ...\n            ),\n        ),\n    )\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Login from './Login'\nimport Error from './Error'\nimport './css/index.scss'\nimport backendSettings from \"./module/settings/backend\"\n\nimport { Provider } from 'react-redux'\nimport { Route, Switch } from 'react-router'\nimport { ConnectedRouter } from 'connected-react-router'\nimport RoutePrivate from './module/RoutePrivate'\nimport configureStore, { history } from './redux/storeConfig'\n\nconst store = configureStore({})\n\nconst settings :backendSettings = {\n    tokenKey: process.env.REACT_APP_TOKEN_KEY ? `${process.env.REACT_APP_TOKEN_KEY}` : 'local_token',\n    cookieKey: process.env.REACT_APP_COOKIE_KEY ? `${process.env.REACT_APP_COOKIE_KEY}` : 'local[session_key]',\n    publicKey: process.env.REACT_APP_PUBLIC_KEY ? `${process.env.REACT_APP_PUBLIC_KEY}` : '',\n    api: {\n        basePath: process.env.REACT_APP_API_PATH ? `${process.env.REACT_APP_API_PATH}` : 'http://localhost:3000/',\n        domain: process.env.REACT_APP_CURRENT_DOMAIN ? `${process.env.REACT_APP_CURRENT_DOMAIN}` : 'localhost'\n    },\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <>\n                <Switch>\n                    <Route exact path=\"/login\">\n                        <React.StrictMode>\n                            <Login {...settings} />\n                        </React.StrictMode>\n                    </Route>\n                    <RoutePrivate exact path=\"/\">\n                        <React.StrictMode>\n                            <App {...settings} />\n                        </React.StrictMode>\n                    </RoutePrivate>\n                    <Route component={Error} />\n                </Switch>\n            </>\n        </ConnectedRouter>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}